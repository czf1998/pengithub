import {CommonAction,CommonActionId} from '../commonActionType'

const defaultState = {
    repositoryDetailModel: {},
    staticRepositoryDetailModel: JSON.parse('{"id":165446099,"node_id":"MDEwOlJlcG9zaXRvcnkxNjU0NDYwOTk=","name":"polynote","full_name":"polynote/polynote","private":false,"owner":{"login":"polynote","id":46636556,"node_id":"MDEyOk9yZ2FuaXphdGlvbjQ2NjM2NTU2","avatar_url":"https://avatars1.githubusercontent.com/u/46636556?v=4","gravatar_id":"","url":"https://api.github.com/users/polynote","html_url":"https://github.com/polynote","followers_url":"https://api.github.com/users/polynote/followers","following_url":"https://api.github.com/users/polynote/following{/other_user}","gists_url":"https://api.github.com/users/polynote/gists{/gist_id}","starred_url":"https://api.github.com/users/polynote/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polynote/subscriptions","organizations_url":"https://api.github.com/users/polynote/orgs","repos_url":"https://api.github.com/users/polynote/repos","events_url":"https://api.github.com/users/polynote/events{/privacy}","received_events_url":"https://api.github.com/users/polynote/received_events","type":"Organization","site_admin":false},"html_url":"https://github.com/polynote/polynote","description":"A better notebook for Scala (and more)","fork":false,"url":"https://api.github.com/repos/polynote/polynote","forks_url":"https://api.github.com/repos/polynote/polynote/forks","keys_url":"https://api.github.com/repos/polynote/polynote/keys{/key_id}","collaborators_url":"https://api.github.com/repos/polynote/polynote/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/polynote/polynote/teams","hooks_url":"https://api.github.com/repos/polynote/polynote/hooks","issue_events_url":"https://api.github.com/repos/polynote/polynote/issues/events{/number}","events_url":"https://api.github.com/repos/polynote/polynote/events","assignees_url":"https://api.github.com/repos/polynote/polynote/assignees{/user}","branches_url":"https://api.github.com/repos/polynote/polynote/branches{/branch}","tags_url":"https://api.github.com/repos/polynote/polynote/tags","blobs_url":"https://api.github.com/repos/polynote/polynote/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/polynote/polynote/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/polynote/polynote/git/refs{/sha}","trees_url":"https://api.github.com/repos/polynote/polynote/git/trees{/sha}","statuses_url":"https://api.github.com/repos/polynote/polynote/statuses/{sha}","languages_url":"https://api.github.com/repos/polynote/polynote/languages","stargazers_url":"https://api.github.com/repos/polynote/polynote/stargazers","contributors_url":"https://api.github.com/repos/polynote/polynote/contributors","subscribers_url":"https://api.github.com/repos/polynote/polynote/subscribers","subscription_url":"https://api.github.com/repos/polynote/polynote/subscription","commits_url":"https://api.github.com/repos/polynote/polynote/commits{/sha}","git_commits_url":"https://api.github.com/repos/polynote/polynote/git/commits{/sha}","comments_url":"https://api.github.com/repos/polynote/polynote/comments{/number}","issue_comment_url":"https://api.github.com/repos/polynote/polynote/issues/comments{/number}","contents_url":"https://api.github.com/repos/polynote/polynote/contents/{+path}","compare_url":"https://api.github.com/repos/polynote/polynote/compare/{base}...{head}","merges_url":"https://api.github.com/repos/polynote/polynote/merges","archive_url":"https://api.github.com/repos/polynote/polynote/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/polynote/polynote/downloads","issues_url":"https://api.github.com/repos/polynote/polynote/issues{/number}","pulls_url":"https://api.github.com/repos/polynote/polynote/pulls{/number}","milestones_url":"https://api.github.com/repos/polynote/polynote/milestones{/number}","notifications_url":"https://api.github.com/repos/polynote/polynote/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/polynote/polynote/labels{/name}","releases_url":"https://api.github.com/repos/polynote/polynote/releases{/id}","deployments_url":"https://api.github.com/repos/polynote/polynote/deployments","created_at":"2019-01-12T23:22:41Z","updated_at":"2019-10-26T01:24:40Z","pushed_at":"2019-10-25T21:14:03Z","git_url":"git://github.com/polynote/polynote.git","ssh_url":"git@github.com:polynote/polynote.git","clone_url":"https://github.com/polynote/polynote.git","svn_url":"https://github.com/polynote/polynote","homepage":"https://polynote.org","size":4430,"stargazers_count":1076,"watchers_count":1076,"language":"Scala","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":55,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":87,"license":{"key":"apache-2.0","name":"Apache License 2.0","spdx_id":"Apache-2.0","url":"https://api.github.com/licenses/apache-2.0","node_id":"MDc6TGljZW5zZTI="},"forks":55,"open_issues":87,"watchers":1076,"default_branch":"master","organization":{"login":"polynote","id":46636556,"node_id":"MDEyOk9yZ2FuaXphdGlvbjQ2NjM2NTU2","avatar_url":"https://avatars1.githubusercontent.com/u/46636556?v=4","gravatar_id":"","url":"https://api.github.com/users/polynote","html_url":"https://github.com/polynote","followers_url":"https://api.github.com/users/polynote/followers","following_url":"https://api.github.com/users/polynote/following{/other_user}","gists_url":"https://api.github.com/users/polynote/gists{/gist_id}","starred_url":"https://api.github.com/users/polynote/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/polynote/subscriptions","organizations_url":"https://api.github.com/users/polynote/orgs","repos_url":"https://api.github.com/users/polynote/repos","events_url":"https://api.github.com/users/polynote/events{/privacy}","received_events_url":"https://api.github.com/users/polynote/received_events","type":"Organization","site_admin":false},"network_count":55,"subscribers_count":30}'),
    loading: false
}

export default (state = defaultState, action) => {
    if(action.type === CommonAction.TRIGGER_LOADING) {
        if(action.payload.id === CommonActionId.GET_REPOSITORY_DETAIL_DATA) {
            return {
                ...state,
                loading: action.payload.loading
            }
        }
    }

    if(action.type === CommonAction.GET_DATA_SUCCESS) {
        if(action.payload.id === CommonActionId.GET_REPOSITORY_DETAIL_DATA) {
            return {
                ...state,
                repositoryDetailModel: action.payload.data,
                loading: false
            }
        }
    }

    return state
}
